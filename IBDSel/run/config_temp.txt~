#include "$ALGORITHMSROOT/share/Algorithms.txt"
//#include "$LIVETIMESVCROOT/share/LiveTime.txt"
//#include "$MUONVETOROOT/share/MuonVeto.txt"
//loaded dlls
LafMain.Dlls = {"Algorithms"};

LafMain.Dlls += {"IBDSel"};
AlgMgr.Contents += {"IBDSel"};

//====================================
IBDSel.PromptEnergyLow = 0.7;  // MeV
IBDSel.PromptEnergyHigh = 12.; // MeV
IBDSel.PromptEnergyHigh4Fn = 200.; // MeV
IBDSel.DelayedEnergyLow = 6.;  // MeV
IBDSel.DelayedEnergyHigh = 12.;  // MeV
IBDSel.IbdTimeIntervalMin = 1.e-6;  // 1 us
IBDSel.IbdTimeIntervalMax = 2.e-4; // 200 us
IBDSel.Time2LastBufEvent = 2.e-4;
//IBDSel.Time2PreAdEvent = 2.e-4;
//IBDSel.Time2NextAdEvent = 2.e-4;
IBDSel.DelayedTrigTime2AdMuon = 1.e-3;
IBDSel.DelayedTrigTime2IWpMuon = 6.e-4;
IBDSel.DelayedTrigTime2OWpMuon = 6.e-4;
IBDSel.DelayedTrigTime2RpcMuon = 6.e-4;
IBDSel.DelayedTrigTime2AdShowerMuon = 1.;
IBDSel.AdMuonELow = 20.;//no use
IBDSel.AdMuonEHigh =2500.;

//====================================
//input service and files
//LafMain.InputSvc = "ReconInputSvc";
//ReconInputSvc.PreferredRecTree = "Event/Rec/AdScaled";
//ReconInputSvc.PreferredEnergy = "enrec";
//ReconInputSvc.InputFiles ={"/dybfs/rec/P12C/GoodRun-part2-v0/SITE/runRUNNUM.list" };
//ReconInputSvc.InputFiles={"/dybfs/rec/Temp/ningzhe/P12C/EH1_good/RUNNUM.list" };

LafMain.InputSvc = "MiniReconInputSvc";
MiniReconInputSvc.PreferredRecTree = "Event/Rec/AdScaled";
MiniReconInputSvc.PreferredEnergy = "enrec";
MiniReconInputSvc.InputFiles ={"/afs/ihep.ac.cn/users/l/lidj/file/runlist/P12C/RpcBad/GoodRun-part2-v0/SITE/RUNNUM.list"};

LafMain.EvtMax   = -1;
LafMain.LogLevel = 3;

//root file (TNtuple, TTree, THist) output
TOutputSvc.Output += {"FILE1":"/afs/ihep.ac.cn/users/l/lidj/data/IBDSelForAcc/RpcBad/SITE/runRUNNUM_hists.root" };
TOutputSvc.Output += {
"FILE2":"/afs/ihep.ac.cn/users/l/lidj/data/IBDSelForAcc/RpcBad/SITE/runRUNNUM_IBD.root" };
//====================================
//the cycler
LafMain.Dlls += {"SelCycler"};
SvcMgr.Contents += {"SelCycler"};

SelCycler.Tags = { "ForceTrigTag", "CrossTrigTag", "RpcNoiseTag", "FlasherTag", "MuonTag"};
//SelCycler.Tags += { "RpcValidTag" };
SelCycler.TimeWindow = { -0.1, 0.1};
SelCycler.KeepFirstEvtEachFile = TRUE;

//RpcValidTag.GoodFileList ={"/publicfs/dyb/user/ningzhe/muon/hvscan/db/SITE/list/RUNNUM.list"};
FlasherTag.RatioMaxQCut = 0.45;
FlasherTag.QuadrantCut = 1.;
FlasherTag.calibPMTFlasherCut = 100.;

// every tag should be set to ApplyVeto or not
FlasherTag.ApplyVeto = FALSE;
CrossTrigTag.ApplyVeto = TRUE;
ForceTrigTag.ApplyVeto = TRUE;
RpcNoiseTag.ApplyVeto = TRUE;
MuonTag.ApplyVeto = FALSE;

//Set FanCycler as the Cycler of LAF
LafMain.Cycler = "FanCycler";
FanCycler.TimeWindow = { -10., 1e-1 };

FanCycler.Tags = { "FanAdMuonTag" };
FanAdMuonTag.ApplyVeto = FALSE;
FanAdMuonTag.AdMuonThreshold = 20.; // MeV
FanAdMuonTag.ShowerMuonThreshold = 2500.; // MeV
FanAdMuonTag.CoincWindow = { -2e-6, 2e-6 };  // +/-2us

GlobalVar.NumADs = 3;
//===================================
//MuonVeto related configuration
MuonTag.IwsNPmtThreshold = 12;
MuonTag.OwsNPmtThreshold = 12;
MuonTag.tagRPCMuon = FALSE;
MuonTag.tagADMuon  = FALSE;
MuonTag.AdMuonThreshold = 20.; // MeV
MuonTag.ShowerMuonThreshold = 2500.; // MeV

MuonVeto.MuVetoWindow = 6.e-4; // s
MuonVeto.AdMuVetoWindow = 1.e-3; // s
MuonVeto.ShowerMuVetoWindow = 1.; // s
MuonVeto.PreVetoWindow = 2.e-6; // s
MuonVeto.useRPCVeto = FALSE;
